name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.8
          args: --timeout=5m

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: ['1.24', '1.25']
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go_version }}
          check-latest: true
          cache: true

      - name: Test
        run: "go test -v -race -coverprofile='coverage.out' ./..."
        shell: bash

      - name: Code coverage
        uses: codecov/codecov-action@v5
        with:
          env_vars: OS,GO
          files: ./coverage.out
          flags: unittests
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.os }}-${{ matrix.go_version }}
          path: coverage.out

  sonarCloudTrigger:
    needs: build
    name: SonarCloud Trigger
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Download code coverage results
        uses: actions/download-artifact@v5

      - name: Display structure of downloaded files
        run: ls -R

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


